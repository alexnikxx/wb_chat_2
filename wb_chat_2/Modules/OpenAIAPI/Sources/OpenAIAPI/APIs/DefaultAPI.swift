//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DefaultAPI {

    /**
     Generate a chat completion
     
     - parameter createChatCompletionRequest: (body) The request payload for generating a chat completion. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createChatCompletion(request: GPTRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GPTResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return createChatCompletionWithRequestBuilder(createChatCompletionRequest: request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Generate a chat completion
     - POST /chat/completions
     - Sends a chat message to OpenAI's GPT model and receives a completion.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: api_key
     - parameter createChatCompletionRequest: (body) The request payload for generating a chat completion. 
     - returns: RequestBuilder<CreateChatCompletion200Response> 
     */
    open class func createChatCompletionWithRequestBuilder(createChatCompletionRequest: GPTRequest) -> RequestBuilder<GPTResponse> {
        let localVariablePath = "/chat/completions"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createChatCompletionRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        // Формируем заголовки, включая Authorization
        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
            "Authorization": "Bearer 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"
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GPTResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
