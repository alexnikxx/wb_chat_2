//
// CreateChatCompletion200ResponseChoicesInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GPTResponseFinishReasons: Codable, JSONEncodable, Hashable {

    public var message: GPTResponseMessage?
    /** The reason why the completion ended (e.g., \"length\"). */
    public var finishReason: String?

    public init(message: GPTResponseMessage? = nil, finishReason: String? = nil) {
        self.message = message
        self.finishReason = finishReason
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case message
        case finishReason = "finish_reason"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(finishReason, forKey: .finishReason)
    }
}

